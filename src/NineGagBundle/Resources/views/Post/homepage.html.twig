{% extends "::base.html.twig" %}
{% block body %}
    <div class="container">
        <h1 class="center-align">9GagClone</h1>
        {% if is_granted("IS_AUTHENTICATED_REMEMBERED") %}
            <div class="row">
                <form id="formPost" method="POST" action="{{path('nine_gag_addPost')}}" enctype="multipart/form-data">
                    <div class="row formdiv">
                        {{ form_widget(form.title, {'attr': {'class': 'col s3 offset-s2', 'placeholder': 'Titre'} }) }}
                        <div class="file-field input-field col s4">
                            <div class="btn">
                                <span>File</span>
                                {{ form_widget(form.image, {'attr': {'class': 'col s4', 'name': 'image'} }) }}
                            </div>
                            <div class="file-path-wrapper">
                                <input class="file-path validate" type="text">
                            </div>
                        </div>
                        {{ form_widget(form.save, {'attr': {'class': 'col s1 waves-effect waves-light btn btnSave'} }) }}
                    </div>
                    <div class="row error text-center">
                        {{ form_errors(form.image) }}
                    </div>
                    {{ form_rest(form) }}
                </form>
            {% endif %}
        </div>
        <div class="container listePostes">

            {% for post in postList %}
                <div class="card col s6 cardPost" data-postId="{{ post.id }}">
                    <div class="card-content">
                        <h2 class="card-title activator grey-text text-darken-4 center-align">{{ post.title }}</h2>
                    </div>
                    <div class="card-image waves-effect waves-block waves-light">
                        <img src="{{asset('uploads/images/' ~ post.image)}}"/>
                    </div>
                    <div class="card-content">
                        <div class="row">
                            <button id="buttonUp" class="buttonChangeScore offset-s3 col s2 green darken-3 btn">up</button>
                            <strong><p class="score col s2 center-align">{{ post.score }}</p></strong>
                            <button class="buttonChangeScore col s2 btn red darken-3" id="buttonDown">down</button>
                            {#            <p>{{ post.user.login }}</p>#}
                        </div>
                        {% include 'NineGagBundle:Comment:comments.html.twig'%}
                    </div>
                </div>
            {% endfor %}

        </div>
    {% endblock %}

    {% block javascripts %}
        {{ parent() }}
        <script>
            $(document).on('click', '.buttonChangeScore', function () {
                var button = this;
                var postId = $(button).closest(".cardPost").attr("data-postId");
                var urlChangeScore;
                if ($(button).attr('id') == 'buttonUp') {
                    urlChangeScore = Routing.generate('nine_gag_scoreChange', {'idPost': postId, 'valueToChange': 1});
                } else {
                    urlChangeScore = Routing.generate('nine_gag_scoreChange', {'idPost': postId, 'valueToChange': -1});
                }

                $.ajax({
                    type: "GET",
                    url: urlChangeScore,
                    dataType: 'JSON',

                    success: function (data) {
                        $(button).closest("div").find(".score").html(data.newScore);
                    }
                });
            });

            {# $('body').on('submit', '#formPost', function (e) {
                 e.preventDefault();
                 console.log("submit");
                 var urlAddPost = Routing.generate('nine_gag_addPost');

                 $.ajax({
                     type: 'POST',
                     url: urlAddPost,
                     data: $(this).serialize(),
                     dataType: 'JSON',

                     success: function (data) {
                          $("body").closest(".listePostes").html($(data.result).find(".listePostes").children("div"));
                     }
                 })
             });#}

                 $('body').on('submit', '.formComment', function (e) {
                     e.preventDefault();
                     console.log("submit");
                     var form = this;
                     var urlAddComment = Routing.generate('nine_gag_addComment');

                     $.ajax({
                         type: 'POST',
                         url: urlAddComment,
                         data: $(this).serialize(),
                         dataType: 'JSON',

                         success: function (data) {
                             console.log(data.result);
                             $(form).closest(".comments").html($(data.result).children());
                         }
                     })
                 });

        </script>

    {% endblock %}
